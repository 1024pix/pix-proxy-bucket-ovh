log_format keyvalue
  'method=$request_method'
  ' path="$request_uri"'
  ' host=$host'
  ' request_id=$http_x_request_id'
  ' from="$remote_addr"'
  ' protocol=$scheme'
  ' status=$status'
  ' duration=${request_time}s'
  ' bytes=$bytes_sent'
  ' referer="$http_referer"'
  ' user_agent="$http_user_agent"'<%#
    To allow dynamic logging format for nginx,
    create a json that contains the key/value pairs
    you want to add to nginx logging.
    For the logs to be correctly parsed, use the nginx_logger_version parameter.
    For example:
    ADDITIONAL_NGINX_LOGS='{"nginx_logger_version":"1", "my_custom_header":"$http_my_custom_header"}'
  %><%
    require 'json';
    JSON.parse(ENV['ADDITIONAL_NGINX_LOGS']||'{}').each do |nginx_key,value| %>
  ' <%= nginx_key %>="<%= value %>"'<% end %>;

access_log off;

upstream bucket_url {
    server <%= ENV["OVH_BUCKET_HOST"] %>:443 max_fails=<%= ENV['NGINX_UPSTREAM_MAX_FAILS'] || 3 %> fail_timeout=<%= ENV['NGINX_UPSTREAM_FAIL_TIMEOUT'] || '5s' %>;
}

server {
  access_log logs/access.log keyvalue;
  server_name localhost;
  listen <%= ENV['PORT'] %>;

  charset utf-8;
  
  location / {
      proxy_hide_header 'access-control-allow-origin';

      add_header 'access-control-allow-origin' * always;

      proxy_pass https://bucket_url<%= ENV["OVH_BUCKET_PATH"] %>;
      proxy_buffering off;
  }
}
